{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","clockName","props","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","updateClockName","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAG3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAbP,kCAgBE,WACEN,OAAOO,cAAcR,KAAKD,WAjB9B,oBAoBE,WACE,IAAQU,EAAcT,KAAKU,MAAnBD,UACAZ,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAMS,cAAcC,OAAO,IAAK,YAjC3C,GAA2BK,IAAMC,eCNjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACEtB,MAAe,CACba,UAAW,UACXU,UAAU,GAHd,EAMEpB,QAAU,EANZ,EA8BEqB,gBAAkB,WAChB,EAAKjB,SAAS,CAAEM,UAAWK,OA/B/B,EAkCEO,iBAAmB,SAACC,GAClBA,EAAMC,iBAEF,EAAK3B,MAAMuB,UACb,EAAKhB,SAAS,CAAEgB,UAAU,KAtChC,EA0CEK,gBAAkB,WACX,EAAK5B,MAAMuB,UACd,EAAKhB,SAAS,CAAEgB,UAAU,KA5ChC,uDAQE,WACEnB,KAAKD,QAAUE,OAAOC,YAAYF,KAAKoB,gBAAiB,MACxDK,SAASC,iBAAiB,cAAe1B,KAAKqB,kBAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,mBAX5C,gCAcE,SACEG,EACAC,GAEI5B,KAAKJ,MAAMuB,UAAYnB,KAAKJ,MAAMa,YAAcmB,EAAUnB,WAE5DL,QAAQyB,MAAR,uBAA8BD,EAAUnB,UAAxC,eAAwDT,KAAKJ,MAAMa,cApBzE,kCAwBE,WACER,OAAOO,cAAcR,KAAKD,SAC1B0B,SAASK,oBAAoB,cAAe9B,KAAKqB,kBACjDI,SAASK,oBAAoB,QAAS9B,KAAKwB,mBA3B/C,oBAgDE,WACE,MAAgCxB,KAAKJ,MAA7Ba,EAAR,EAAQA,UAAWU,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOV,UAAWA,WAxD5B,GAAyBG,IAAMC,eCZ/BkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.a6ec65c1.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  clockName: string;\n}\n\ninterface State {\n  today: Date;\n}\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends React.PureComponent {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.updateClockName, 3300);\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentDidUpdate(\n    _prevProps: Readonly<{}>,\n    prevState: Readonly<State>,\n  ): void {\n    if (this.state.hasClock && this.state.clockName !== prevState.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  updateClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (this.state.hasClock) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  handleLeftClick = () => {\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}